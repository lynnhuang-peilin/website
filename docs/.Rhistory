# Load necessary libraries
library(readr)
# Load necessary libraries
library(readr)
library(knitr)
library(DT)
library(dplyr)
library(googlesheets4)
# Read and display the CSV file as a table
UMB_ISPOR_Awards <- read_csv("files/UMB_ISPOR_Awards.csv")
UMB_ISPOR_Publications <- read_csv("files/UMB_ISPOR_Publications.csv")
# Prepare ISPOR Presentation list
# Authenticate with Google (this will open a browser for the first time)
gs4_auth()
# Prepare ISPOR Presentation list
# Authenticate with Google (this will open a browser for the first time)
gs4_auth()
# Replace the URL with the link to your Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1zEE23AcJEGOqL6qvhd-17jQMSaH0IKhHYKXVdbjoAtI/edit?usp=sharing"
# Get the names of all sheets in the Google Sheet
sheet_names <- sheet_names(sheet_url)
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each sheet, read data, and add a Year column
for (sheet_name in sheet_names) {
sheet_data <- read_sheet(sheet_url, sheet = sheet_name)
sheet_data$Year <- (sheet_name)
data_list[[sheet_name]] <- sheet_data
}
# Combine all datasets into one
df <- do.call(rbind, data_list)
# Replace the URL with the link to your Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1zEE23AcJEGOqL6qvhd-17jQMSaH0IKhHYKXVdbjoAtI/edit?usp=sharing"
# Get the names of all sheets in the Google Sheet
sheet_names <- sheet_names(sheet_url)
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each sheet, read data, and add a Year column
for (sheet_name in sheet_names) {
sheet_data <- read_sheet(sheet_url, sheet = sheet_name)
sheet_data$Year <- (sheet_name)
data_list[[sheet_name]] <- sheet_data
}
# Combine all datasets into one
df <- do.call(rbind, data_list)
df <- bind_rows(data_list) %>%
select(
Year,
any_of(c("Presenter", "Author(s)/ Speaker(s)", "Title", "Type", "Code"))
)
View(df)
rmarkdown::render("index.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("team.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("table.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("gallery.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("follow.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("index.Rmd", output_format = "html_document", output_dir = "")
rmarkdown::render("index.Rmd", output_format = "html_document", output_dir = "/")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
rmarkdown::render("index.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("team.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("table.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("gallery.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("follow.Rmd", output_format = "html_document", output_dir = "docs/")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
rmarkdown::render("index.Rmd", output_format = "html_document")
rmarkdown::render("ISPOR.Rmd", output_format = "html_document")
rmarkdown::render("team.Rmd", output_format = "html_document")
rmarkdown::render("table.Rmd", output_format = "html_document")
rmarkdown::render("gallery.Rmd", output_format = "html_document")
rmarkdown::render("follow.Rmd", output_format = "html_document")
# First specify the packages of interest
packages = c("rentrez","rmarkdown", "knitr","dplyr","tidyr","tidyverse","stringr",
"readxl","readr","DT")
# Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
search_term <- paste("((","Pei-Lin Huang","[au] AND (University of Maryland [ad] OR ","University of Florida"," [ad] OR ","Johns Hopkins University"," [ad]) NOT (Cells [mh] AND animals [mh]))")
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
list_id <- search_results$ids
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-author
output <- rbind(output,temp_df)
}
}
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
output <- data.frame(author=character(),title=character(),
journal=character(),date=character(),stringsAsFactors=FALSE)
search_term <- paste("((","Pei-Lin Huang","[au] AND (University of Maryland [ad] OR ","University of Florida"," [ad] OR ","Johns Hopkins University"," [ad]) NOT (Cells [mh] AND animals [mh]))")
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
print(length(list_id))
print(search_term)
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
for (i in 1:nrow(input)) {
search_list <- input[i,]
author <- str_c(search_list$first_name," ",search_list$last_name)
print(author)
affiliation_1 <- search_list$affiliation_1
affiliation_2 <- search_list$affiliation_2
if (!is.na(affiliation_1)) {
search_term <- paste("((",author,"[au] AND (University of Maryland [ad] OR ",affiliation_1," [ad] OR ",affiliation_2," [ad]) NOT (Cells [mh] AND animals [mh]))")
if (!is.na(affiliation_2)) {
search_term <- paste("((",author,"[au] AND (University of Maryland [ad] OR ",affiliation_1," [ad] OR ",affiliation_2," [ad]) NOT (Cells [mh] AND animals [mh]))")
}
} else {
search_term <- paste("((",author,"[au] AND University of Maryland [ad]) NOT (Cells [mh] AND animals [mh]))")
}
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-author
output <- rbind(output,temp_df)
}
}
rm(search_term)
}
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
output <-
output %>%
select(author, everything()) %>%
arrange(author, date)
# Prepare ISPOR Presentation list
# Authenticate with Google (this will open a browser for the first time)
gs4_auth()
output <- data.frame(author=character(),title=character(),
journal=character(),date=character(),stringsAsFactors=FALSE)
search_term <- paste("((","Pei-Lin Huang","[au] AND (University of Maryland [ad] OR ","University of Florida"," [ad] OR ","Johns Hopkins University"," [ad]) NOT (Cells [mh] AND animals [mh]))")
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
print(length(list_id))
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
View(output)
output <-
output %>%
select(author, everything()) %>%
arrange(author, date)
output <- data.frame(author=character(),title=character(),
journal=character(),date=character(),stringsAsFactors=FALSE)
View(output)
search_term <- paste("((","Pei-Lin Huang","[au] AND (University of Maryland [ad] OR ","University of Florida"," [ad] OR ","Johns Hopkins University"," [ad]) NOT (Cells [mh] AND animals [mh]))")
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
search_results <- entrez_search(db="pubmed", term=search_term, retmax=40)
list_id <- search_results$ids
list_id <- search_results$ids
print(length(list_id))
print(search_term)
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
if (length(list_id)>0) {
for (j in (1:length(list_id))) {
search_summary <- entrez_summary(db="pubmed", id=list_id[j])
temp_sum <- search_summary[c('title', 'fulljournalname','pubdate')]
temp_df <- data.frame(matrix(unlist(temp_sum), ncol =3, byrow = T))
colnames(temp_df) <- c('title', 'journal', 'date')
temp_df$author <-"Pei-Lin Huang"
output <- rbind(output,temp_df)
}
}
View(output)
View(output)
output <-
output %>%
select(author, everything()) %>%
arrange(author, date)
output <-
output %>%
select(author, everything()) %>%
arrange(author, desc(date))
View(output)
output <-
output %>%
select(author, everything()) %>%
arrange(author, desc(date)) %>%
distinct(author, title, .keep_all = TRUE)
